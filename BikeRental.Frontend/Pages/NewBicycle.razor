@page "/newbicycle"
@using BikeRental.Frontend.Models

@inject HttpClient http
@inject NavigationManager Navigation

<h3>New Bicycle</h3>

<form>
    <div class="form-group">
        <label for="inputCategory">Category</label>
        <select id="inputCategory" class="form-control" asp-items @bind="pickedCategory.Id">
            <option selected>Choose category...</option>
            <option>...</option>
            @foreach(var item in CategoryList)
            {
                <option value="@item.Id">@item.Type</option>
            }
        </select>
    </div>
    <div class="form-group">
        <label for="formGroupExampleInput">Model Name</label>
        <input type="text" class="form-control" id="formGroupExampleInput" placeholder="Example input" @bind="pickedModelName">
    </div>
    <div class="form-group">
        <label for="inputFramesize">Frame Size</label>
        <select id="inputFramesize" class="form-control" @bind="pickedFramesize.Id">
            <option selected>Choose frame size...</option>
            <option>...</option>
            @foreach (var item in FrameSizeList)
            {
                <option value="@item.Id">@item.Size</option>
            }
        </select>
    </div>
    <div class="form-group">
        <label for="formGroupExampleInput2">Serial Number</label>
        <input type="text" class="form-control" id="formGroupExampleInput2" placeholder="Another input" @bind="pickedSerialNumber">
    </div>
</form>
<button class="btn btn-dark" @onclick="CreateNewBike">Add new bike</button>


@code {
    public List<Category> CategoryList = new List<Category>();
    public List<FrameSize> FrameSizeList = new List<FrameSize>();

    public Category pickedCategory = new();
    public FrameSize pickedFramesize = new();

    string pickedModelName;
    string pickedSerialNumber;

    private async Task CreateNewBike()
    {
        var newBike = new Bicycle
            {
                CategoryId = pickedCategory.Id,
                ModelName = pickedModelName,
                FrameSizeId = pickedFramesize.Id,
                SerialNumber = pickedSerialNumber,
                IsAvailable = false,
                IsInService = true
        };
        var response = await http.PostAsJsonAsync<Bicycle>("http://backend-api:80/api/service/create/bicycle", newBike);
        if (response.IsSuccessStatusCode)
        {
            Navigation.NavigateTo("/service", true);
        }
    }

    protected override async Task OnInitializedAsync()
    {
        CategoryList = await http.GetFromJsonAsync<List<Category>>("http://backend-api:80/api/category") ?? new List<Category>();

        FrameSizeList = await http.GetFromJsonAsync<List<FrameSize>>("http://backend-api:80/api/framesize") ?? new List<FrameSize>();
    }
}
